!(function (e) { const t = System.constructor.prototype; const r = [[], function () { return {}; }]; function n() { throw Error('AMD require not supported.'); } function o() {} const s = ['require', 'exports', 'module']; function i(e, t) { const r = {}; const o = { exports: r }; const s = []; const i = []; let u = 0; for (let t = 0; t < e.length; t++) { const f = e[t]; const c = i.length; if (f === 'require')s[t] = n, u++; else if (f === 'module')s[t] = o, u++; else if (f === 'exports')s[t] = r, u++; else { const e = t; i.push(t => { s[e] = t.__useDefault ? t.default : t; }); }u && (e[c] = f); }u && (e.length -= u); const f = t; return [e, function (e) { return e({ default: r, __useDefault: !0 }), { setters: i, execute() { o.exports = f.apply(r, s) || o.exports, r !== o.exports && e('default', o.exports); } }; }]; }let u; const f = t.register; t.register = function (e, t, r) { u = typeof e === 'string' ? r : t, f.apply(this, arguments); }; const c = t.getRegister; let l; let p; t.getRegister = function () { const e = c.call(this); if (e && e[1] === u) return e; if (!l) return e || r; const t = i(l, p); return l = null, t; }, e.define = function (e, t, r) { if (typeof e === 'string') { if (l) { if (!System.registerRegistry) throw Error('Include the named register extension for SystemJS named AMD support.'); return System.registerRegistry[e] = i(t, r), l = [], void (p = o); }System.registerRegistry && (System.registerRegistry[e] = i([].concat(t), r)), e = t, t = r; }e instanceof Array ? (l = e, p = t) : typeof e === 'object' ? (l = [], p = function () { return e; }) : typeof e === 'function' && (l = s, p = e); }, e.define.amd = {}; }(typeof self !== 'undefined' ? self : global));
