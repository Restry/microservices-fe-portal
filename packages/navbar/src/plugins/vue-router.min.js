/*!
  * vue-router v3.0.7
  * (c) 2019 Evan You
  * @license MIT
  */
let t; let e; t = this, e = function () {
    function t(t) { return Object.prototype.toString.call(t).indexOf('Error') > -1; } function e(t, e) { for (const r in e)t[r] = e[r]; return t; } const r = { name: 'RouterView', functional: !0, props: { name: { type: String, default: 'default' } }, render(t, r) { const n = r.props; const o = r.children; let i = r.parent; const a = r.data; a.routerView = !0; for (var u = i.$createElement, c = n.name, s = i.$route, p = i._routerViewCache || (i._routerViewCache = {}), f = 0, h = !1; i && i._routerRoot !== i;) { const l = i.$vnode && i.$vnode.data; l && (l.routerView && f++, l.keepAlive && i._inactive && (h = !0)), i = i.$parent; } if (a.routerViewDepth = f, h) return u(p[c], a, o); const d = s.matched[f]; if (!d) return p[c] = null, u(); const v = p[c] = d.components[c]; a.registerRouteInstance = function (t, e) { const r = d.instances[c]; (e && r !== t || !e && r === t) && (d.instances[c] = e); }, (a.hook || (a.hook = {})).prepatch = function (t, e) { d.instances[c] = e.componentInstance; }, a.hook.init = function (t) { t.data.keepAlive && t.componentInstance && t.componentInstance !== d.instances[c] && (d.instances[c] = t.componentInstance); }; let y = a.props = (function (t, e) { switch (typeof e) { case 'undefined': return; case 'object': return e; case 'function': return e(t); case 'boolean': return e ? t.params : void 0; } }(s, d.props && d.props[c])); if (y) { y = a.props = e({}, y); const m = a.attrs = a.attrs || {}; for (const g in y)v.props && g in v.props || (m[g] = y[g], delete y[g]); } return u(v, a, o); } }; const n = /[!'()*]/g; const o = function (t) { return `%${t.charCodeAt(0).toString(16)}`; }; const i = /%2C/g; const a = function (t) { return encodeURIComponent(t).replace(n, o).replace(i, ','); }; const u = decodeURIComponent; function c(t) { const e = {}; return (t = t.trim().replace(/^(\?|#|&)/, '')) ? (t.split('&').forEach(t => { const r = t.replace(/\+/g, ' ').split('='); const n = u(r.shift()); const o = r.length > 0 ? u(r.join('=')) : null; void 0 === e[n] ? e[n] = o : Array.isArray(e[n]) ? e[n].push(o) : e[n] = [e[n], o]; }), e) : e; } function s(t) { const e = t ? Object.keys(t).map(e => { const r = t[e]; if (void 0 === r) return ''; if (r === null) return a(e); if (Array.isArray(r)) { const n = []; return r.forEach(t => { void 0 !== t && (t === null ? n.push(a(e)) : n.push(`${a(e)}=${a(t)}`)); }), n.join('&'); } return `${a(e)}=${a(r)}`; }).filter(t => t.length > 0).join('&') : null; return e ? `?${e}` : ''; } const p = /\/?$/; function f(t, e, r, n) { const o = n && n.options.stringifyQuery; let i = e.query || {}; try { i = h(i); } catch (t) {} const a = { name: e.name || t && t.name, meta: t && t.meta || {}, path: e.path || '/', hash: e.hash || '', query: i, params: e.params || {}, fullPath: v(e, o), matched: t ? d(t) : [] }; return r && (a.redirectedFrom = v(r, o)), Object.freeze(a); } function h(t) { if (Array.isArray(t)) return t.map(h); if (t && typeof t === 'object') { const e = {}; for (const r in t)e[r] = h(t[r]); return e; } return t; } const l = f(null, { path: '/' }); function d(t) { for (var e = []; t;)e.unshift(t), t = t.parent; return e; } function v(t, e) { const r = t.path; let n = t.query; void 0 === n && (n = {}); let o = t.hash; return void 0 === o && (o = ''), (r || '/') + (e || s)(n) + o; } function y(t, e) { return e === l ? t === e : !!e && (t.path && e.path ? t.path.replace(p, '') === e.path.replace(p, '') && t.hash === e.hash && m(t.query, e.query) : !(!t.name || !e.name) && (t.name === e.name && t.hash === e.hash && m(t.query, e.query) && m(t.params, e.params))); } function m(t, e) { if (void 0 === t && (t = {}), void 0 === e && (e = {}), !t || !e) return t === e; const r = Object.keys(t); const n = Object.keys(e); return r.length === n.length && r.every(r => { const n = t[r]; const o = e[r]; return typeof n === 'object' && typeof o === 'object' ? m(n, o) : String(n) === String(o); }); } let g; const b = [String, Object]; const w = [String, Array]; const x = { name: 'RouterLink', props: { to: { type: b, required: !0 }, tag: { type: String, default: 'a' }, exact: Boolean, append: Boolean, replace: Boolean, activeClass: String, exactActiveClass: String, event: { type: w, default: 'click' } }, render(t) { const r = this; const n = this.$router; const o = this.$route; const i = n.resolve(this.to, o, this.append); const a = i.location; const u = i.route; const c = i.href; const s = {}; const h = n.options.linkActiveClass; const l = n.options.linkExactActiveClass; const d = h == null ? 'router-link-active' : h; const v = l == null ? 'router-link-exact-active' : l; const m = this.activeClass == null ? d : this.activeClass; const g = this.exactActiveClass == null ? v : this.exactActiveClass; const b = a.path ? f(null, a, null, n) : u; s[g] = y(o, b), s[m] = this.exact ? s[g] : (function (t, e) { return t.path.replace(p, '/').indexOf(e.path.replace(p, '/')) === 0 && (!e.hash || t.hash === e.hash) && (function (t, e) { for (const r in e) if (!(r in t)) return !1; return !0; }(t.query, e.query)); }(o, b)); const w = function (t) { k(t) && (r.replace ? n.replace(a) : n.push(a)); }; const x = { click: k }; Array.isArray(this.event) ? this.event.forEach(t => { x[t] = w; }) : x[this.event] = w; const R = { class: s }; if (this.tag === 'a')R.on = x, R.attrs = { href: c }; else { const E = (function t(e) { if (e) for (var r, n = 0; n < e.length; n++) { if ((r = e[n]).tag === 'a') return r; if (r.children && (r = t(r.children))) return r; } }(this.$slots.default)); if (E)E.isStatic = !1, (E.data = e({}, E.data)).on = x, (E.data.attrs = e({}, E.data.attrs)).href = c; else R.on = x; } return t(this.tag, R, this.$slots.default); } }; function k(t) { if (!(t.metaKey || t.altKey || t.ctrlKey || t.shiftKey || t.defaultPrevented || void 0 !== t.button && t.button !== 0)) { if (t.currentTarget && t.currentTarget.getAttribute) { const e = t.currentTarget.getAttribute('target'); if (/\b_blank\b/i.test(e)) return; } return t.preventDefault && t.preventDefault(), !0; } } const R = typeof window !== 'undefined'; function E(t, e, r) { const n = t.charAt(0); if (n === '/') return t; if (n === '?' || n === '#') return e + t; const o = e.split('/'); r && o[o.length - 1] || o.pop(); for (let i = t.replace(/^\//, '').split('/'), a = 0; a < i.length; a++) { const u = i[a]; u === '..' ? o.pop() : u !== '.' && o.push(u); } return o[0] !== '' && o.unshift(''), o.join('/'); } function O(t) { return t.replace(/\/\//g, '/'); } const A = Array.isArray || function (t) { return Object.prototype.toString.call(t) == '[object Array]'; }; const C = H; const j = L; const _ = function (t, e) { return U(L(t, e)); }; const T = U; const S = B; const $ = new RegExp(['(\\\\.)', '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'].join('|'), 'g'); function L(t, e) { for (var r, n = [], o = 0, i = 0, a = '', u = e && e.delimiter || '/'; (r = $.exec(t)) != null;) { const c = r[0]; const s = r[1]; const p = r.index; if (a += t.slice(i, p), i = p + c.length, s)a += s[1]; else { const f = t[i]; const h = r[2]; const l = r[3]; const d = r[4]; const v = r[5]; const y = r[6]; const m = r[7]; a && (n.push(a), a = ''); const g = h != null && f != null && f !== h; const b = y === '+' || y === '*'; const w = y === '?' || y === '*'; const x = r[2] || u; const k = d || v; n.push({ name: l || o++, prefix: h || '', delimiter: x, optional: w, repeat: b, partial: g, asterisk: !!m, pattern: k ? I(k) : m ? '.*' : `[^${P(x)}]+?` }); } } return i < t.length && (a += t.substr(i)), a && n.push(a), n; } function q(t) { return encodeURI(t).replace(/[\/?#]/g, t => `%${t.charCodeAt(0).toString(16).toUpperCase()}`); } function U(t) { for (var e = new Array(t.length), r = 0; r < t.length; r++) typeof t[r] === 'object' && (e[r] = new RegExp(`^(?:${t[r].pattern})$`)); return function (r, n) { for (var o = '', i = r || {}, a = (n || {}).pretty ? q : encodeURIComponent, u = 0; u < t.length; u++) { const c = t[u]; if (typeof c !== 'string') { var s; const p = i[c.name]; if (p == null) { if (c.optional) { c.partial && (o += c.prefix); continue; } throw new TypeError(`Expected "${c.name}" to be defined`); } if (A(p)) { if (!c.repeat) throw new TypeError(`Expected "${c.name}" to not repeat, but received \`${JSON.stringify(p)}\``); if (p.length === 0) { if (c.optional) continue; throw new TypeError(`Expected "${c.name}" to not be empty`); } for (let f = 0; f < p.length; f++) { if (s = a(p[f]), !e[u].test(s)) throw new TypeError(`Expected all "${c.name}" to match "${c.pattern}", but received \`${JSON.stringify(s)}\``); o += (f === 0 ? c.prefix : c.delimiter) + s; } } else { if (s = c.asterisk ? encodeURI(p).replace(/[?#]/g, t => `%${t.charCodeAt(0).toString(16).toUpperCase()}`) : a(p), !e[u].test(s)) throw new TypeError(`Expected "${c.name}" to match "${c.pattern}", but received "${s}"`); o += c.prefix + s; } } else o += c; } return o; }; } function P(t) { return t.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1'); } function I(t) { return t.replace(/([=!:$\/()])/g, '\\$1'); } function M(t, e) { return t.keys = e, t; } function V(t) { return t.sensitive ? '' : 'i'; } function B(t, e, r) { A(e) || (r = e || r, e = []); for (var n = (r = r || {}).strict, o = !1 !== r.end, i = '', a = 0; a < t.length; a++) { const u = t[a]; if (typeof u === 'string')i += P(u); else { const c = P(u.prefix); let s = `(?:${u.pattern})`; e.push(u), u.repeat && (s += `(?:${c}${s})*`), i += s = u.optional ? u.partial ? `${c}(${s})?` : `(?:${c}(${s}))?` : `${c}(${s})`; } } const p = P(r.delimiter || '/'); const f = i.slice(-p.length) === p; return n || (i = `${f ? i.slice(0, -p.length) : i}(?:${p}(?=$))?`), i += o ? '$' : n && f ? '' : `(?=${p}|$)`, M(new RegExp(`^${i}`, V(r)), e); } function H(t, e, r) { return A(e) || (r = e || r, e = []), r = r || {}, t instanceof RegExp ? (function (t, e) { const r = t.source.match(/\((?!\?)/g); if (r) for (let n = 0; n < r.length; n++)e.push({ name: n, prefix: null, delimiter: null, optional: !1, repeat: !1, partial: !1, asterisk: !1, pattern: null }); return M(t, e); }(t, e)) : A(t) ? (function (t, e, r) { for (var n = [], o = 0; o < t.length; o++)n.push(H(t[o], e, r).source); return M(new RegExp(`(?:${n.join('|')})`, V(r)), e); }(t, e, r)) : (function (t, e, r) { return B(L(t, r), e, r); }(t, e, r)); }C.parse = j, C.compile = _, C.tokensToFunction = T, C.tokensToRegExp = S; const z = Object.create(null); function D(t, e, r) { e = e || {}; try { const n = z[t] || (z[t] = C.compile(t)); return e.pathMatch && (e[0] = e.pathMatch), n(e, { pretty: !0 }); } catch (t) { return ''; } finally { delete e[0]; } } function F(t, e, r, n) { const o = e || []; const i = r || Object.create(null); const a = n || Object.create(null); t.forEach(t => { !(function t(e, r, n, o, i, a) { const u = o.path; const c = o.name; const s = o.pathToRegexpOptions || {}; const p = (function (t, e, r) { r || (t = t.replace(/\/$/, '')); if (t[0] === '/') return t; if (e == null) return t; return O(`${e.path}/${t}`); }(u, i, s.strict)); typeof o.caseSensitive === 'boolean' && (s.sensitive = o.caseSensitive); const f = { path: p, regex: K(p, s), components: o.components || { default: o.component }, instances: {}, name: c, parent: i, matchAs: a, redirect: o.redirect, beforeEnter: o.beforeEnter, meta: o.meta || {}, props: o.props == null ? {} : o.components ? o.props : { default: o.props } }; o.children && o.children.forEach(o => { const i = a ? O(`${a}/${o.path}`) : void 0; t(e, r, n, o, f, i); }); if (void 0 !== o.alias) { const h = Array.isArray(o.alias) ? o.alias : [o.alias]; h.forEach(a => { const u = { path: a, children: o.children }; t(e, r, n, u, i, f.path || '/'); }); }r[f.path] || (e.push(f.path), r[f.path] = f); c && (n[c] || (n[c] = f)); }(o, i, a, t)); }); for (let u = 0, c = o.length; u < c; u++)o[u] === '*' && (o.push(o.splice(u, 1)[0]), c--, u--); return { pathList: o, pathMap: i, nameMap: a }; } function K(t, e) { return C(t, [], e); } function J(t, r, n, o) { let i = typeof t === 'string' ? { path: t } : t; if (i._normalized) return i; if (i.name) return e({}, t); if (!i.path && i.params && r) { (i = e({}, i))._normalized = !0; const a = e(e({}, r.params), i.params); if (r.name)i.name = r.name, i.params = a; else if (r.matched.length) { const u = r.matched[r.matched.length - 1].path; i.path = D(u, a, r.path); } return i; } const s = (function (t) { let e = ''; let r = ''; const n = t.indexOf('#'); n >= 0 && (e = t.slice(n), t = t.slice(0, n)); const o = t.indexOf('?'); return o >= 0 && (r = t.slice(o + 1), t = t.slice(0, o)), { path: t, query: r, hash: e }; }(i.path || '')); const p = r && r.path || '/'; const f = s.path ? E(s.path, p, n || i.append) : p; const h = (function (t, e, r) { void 0 === e && (e = {}); let n; const o = r || c; try { n = o(t || ''); } catch (t) { n = {}; } for (const i in e)n[i] = e[i]; return n; }(s.query, i.query, o && o.options.parseQuery)); let l = i.hash || s.hash; return l && l.charAt(0) !== '#' && (l = `#${l}`), { _normalized: !0, path: f, query: h, hash: l }; } function N(t, e) { const r = F(t); const n = r.pathList; const o = r.pathMap; const i = r.nameMap; function a(t, r, a) { const u = J(t, r, !1, e); const s = u.name; if (s) { const p = i[s]; if (!p) return c(null, u); const f = p.regex.keys.filter(t => !t.optional).map(t => t.name); if (typeof u.params !== 'object' && (u.params = {}), r && typeof r.params === 'object') for (const h in r.params)!(h in u.params) && f.indexOf(h) > -1 && (u.params[h] = r.params[h]); return u.path = D(p.path, u.params), c(p, u, a); } if (u.path) { u.params = {}; for (let l = 0; l < n.length; l++) { const d = n[l]; const v = o[d]; if (Q(v.regex, u.path, u.params)) return c(v, u, a); } } return c(null, u); } function u(t, r) { const n = t.redirect; let o = typeof n === 'function' ? n(f(t, r, null, e)) : n; if (typeof o === 'string' && (o = { path: o }), !o || typeof o !== 'object') return c(null, r); const u = o; const s = u.name; const p = u.path; let h = r.query; let l = r.hash; let d = r.params; if (h = u.hasOwnProperty('query') ? u.query : h, l = u.hasOwnProperty('hash') ? u.hash : l, d = u.hasOwnProperty('params') ? u.params : d, s) { i[s]; return a({ _normalized: !0, name: s, query: h, hash: l, params: d }, void 0, r); } if (p) { const v = (function (t, e) { return E(t, e.parent ? e.parent.path : '/', !0); }(p, t)); return a({ _normalized: !0, path: D(v, d), query: h, hash: l }, void 0, r); } return c(null, r); } function c(t, r, n) { return t && t.redirect ? u(t, n || r) : t && t.matchAs ? (function (t, e, r) { const n = a({ _normalized: !0, path: D(r, e.params) }); if (n) { const o = n.matched; const i = o[o.length - 1]; return e.params = n.params, c(i, e); } return c(null, e); }(0, r, t.matchAs)) : f(t, r, n, e); } return { match: a, addRoutes(t) { F(t, n, o, i); } }; } function Q(t, e, r) { const n = e.match(t); if (!n) return !1; if (!r) return !0; for (let o = 1, i = n.length; o < i; ++o) { const a = t.keys[o - 1]; const u = typeof n[o] === 'string' ? decodeURIComponent(n[o]) : n[o]; a && (r[a.name || 'pathMatch'] = u); } return !0; } const X = Object.create(null); function Y() { const t = `${window.location.protocol}//${window.location.host}`; const e = window.location.href.replace(t, ''); window.history.replaceState({ key: ct() }, '', e), window.addEventListener('popstate', t => { let e; G(), t.state && t.state.key && (e = t.state.key, at = e); }); } function W(t, e, r, n) { if (t.app) { const o = t.options.scrollBehavior; o && t.app.$nextTick(() => { const i = (function () { const t = ct(); if (t) return X[t]; }()); const a = o.call(t, e, r, n ? i : null); a && (typeof a.then === 'function' ? a.then(t => { rt(t, i); }).catch(t => {}) : rt(a, i)); }); } } function G() { const t = ct(); t && (X[t] = { x: window.pageXOffset, y: window.pageYOffset }); } function Z(t) { return et(t.x) || et(t.y); } function tt(t) { return { x: et(t.x) ? t.x : window.pageXOffset, y: et(t.y) ? t.y : window.pageYOffset }; } function et(t) { return typeof t === 'number'; } function rt(t, e) { let r; const n = typeof t === 'object'; if (n && typeof t.selector === 'string') { const o = document.querySelector(t.selector); if (o) { let i = t.offset && typeof t.offset === 'object' ? t.offset : {}; e = (function (t, e) { const r = document.documentElement.getBoundingClientRect(); const n = t.getBoundingClientRect(); return { x: n.left - r.left - e.x, y: n.top - r.top - e.y }; }(o, i = { x: et((r = i).x) ? r.x : 0, y: et(r.y) ? r.y : 0 })); } else Z(t) && (e = tt(t)); } else n && Z(t) && (e = tt(t)); e && window.scrollTo(e.x, e.y); } let nt; const ot = R && (((nt = window.navigator.userAgent).indexOf('Android 2.') === -1 && nt.indexOf('Android 4.0') === -1 || nt.indexOf('Mobile Safari') === -1 || nt.indexOf('Chrome') !== -1 || nt.indexOf('Windows Phone') !== -1) && window.history && 'pushState' in window.history); const it = R && window.performance && window.performance.now ? window.performance : Date; var at = ut(); function ut() { return it.now().toFixed(3); } function ct() { return at; } function st(t, e) { G(); const r = window.history; try { e ? r.replaceState({ key: at }, '', t) : (at = ut(), r.pushState({ key: at }, '', t)); } catch (r) { window.location[e ? 'replace' : 'assign'](t); } } function pt(t) { st(t, !0); } function ft(t, e, r) { var n = function (o) { o >= t.length ? r() : t[o] ? e(t[o], () => { n(o + 1); }) : n(o + 1); }; n(0); } function ht(e) { return function (r, n, o) { let i = !1; let a = 0; let u = null; lt(e, (e, r, n, c) => { if (typeof e === 'function' && void 0 === e.cid) { i = !0, a++; let s; const p = yt(t => { let r; ((r = t).__esModule || vt && r[Symbol.toStringTag] === 'Module') && (t = t.default), e.resolved = typeof t === 'function' ? t : g.extend(t), n.components[c] = t, --a <= 0 && o(); }); const f = yt(e => { const r = `Failed to resolve async component ${c}: ${e}`; u || (u = t(e) ? e : new Error(r), o(u)); }); try { s = e(p, f); } catch (t) { f(t); } if (s) if (typeof s.then === 'function')s.then(p, f); else { const h = s.component; h && typeof h.then === 'function' && h.then(p, f); } } }), i || o(); }; } function lt(t, e) { return dt(t.map(t => Object.keys(t.components).map(r => e(t.components[r], t.instances[r], t, r)))); } function dt(t) { return Array.prototype.concat.apply([], t); } var vt = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol'; function yt(t) { let e = !1; return function () { for (var r = [], n = arguments.length; n--;)r[n] = arguments[n]; if (!e) return e = !0, t.apply(this, r); }; } const mt = function (t, e) { this.router = t, this.base = (function (t) { if (!t) if (R) { const e = document.querySelector('base'); t = (t = e && e.getAttribute('href') || '/').replace(/^https?:\/\/[^\/]+/, ''); } else t = '/'; t.charAt(0) !== '/' && (t = `/${t}`); return t.replace(/\/$/, ''); }(e)), this.current = l, this.pending = null, this.ready = !1, this.readyCbs = [], this.readyErrorCbs = [], this.errorCbs = []; }; function gt(t, e, r, n) { const o = lt(t, (t, n, o, i) => { const a = (function (t, e) { typeof t !== 'function' && (t = g.extend(t)); return t.options[e]; }(t, e)); if (a) return Array.isArray(a) ? a.map(t => r(t, n, o, i)) : r(a, n, o, i); }); return dt(n ? o.reverse() : o); } function bt(t, e) { if (e) return function () { return t.apply(e, arguments); }; }mt.prototype.listen = function (t) { this.cb = t; }, mt.prototype.onReady = function (t, e) { this.ready ? t() : (this.readyCbs.push(t), e && this.readyErrorCbs.push(e)); }, mt.prototype.onError = function (t) { this.errorCbs.push(t); }, mt.prototype.transitionTo = function (t, e, r) { const n = this; const o = this.router.match(t, this.current); this.confirmTransition(o, () => { n.updateRoute(o), e && e(o), n.ensureURL(), n.ready || (n.ready = !0, n.readyCbs.forEach(t => { t(o); })); }, t => { r && r(t), t && !n.ready && (n.ready = !0, n.readyErrorCbs.forEach(e => { e(t); })); }); }, mt.prototype.confirmTransition = function (e, r, n) { const o = this; const i = this.current; const a = function (e) { t(e) && (o.errorCbs.length ? o.errorCbs.forEach(t => { t(e); }) : console.error(e)), n && n(e); }; if (y(e, i) && e.matched.length === i.matched.length) return this.ensureURL(), a(); const u = (function (t, e) { let r; const n = Math.max(t.length, e.length); for (r = 0; r < n && t[r] === e[r]; r++);return { updated: e.slice(0, r), activated: e.slice(r), deactivated: t.slice(r) }; }(this.current.matched, e.matched)); const c = u.updated; const s = u.deactivated; const p = u.activated; const f = [].concat((function (t) { return gt(t, 'beforeRouteLeave', bt, !0); }(s)), this.router.beforeHooks, (function (t) { return gt(t, 'beforeRouteUpdate', bt); }(c)), p.map(t => t.beforeEnter), ht(p)); this.pending = e; const h = function (r, n) { if (o.pending !== e) return a(); try { r(e, i, e => { !1 === e || t(e) ? (o.ensureURL(!0), a(e)) : typeof e === 'string' || typeof e === 'object' && (typeof e.path === 'string' || typeof e.name === 'string') ? (a(), typeof e === 'object' && e.replace ? o.replace(e) : o.push(e)) : n(e); }); } catch (t) { a(t); } }; ft(f, h, () => { const t = []; ft((function (t, e, r) { return gt(t, 'beforeRouteEnter', (t, n, o, i) => (function (t, e, r, n, o) { return function (i, a, u) { return t(i, a, t => { typeof t === 'function' && n.push(() => { !(function t(e, r, n, o) { r[n] && !r[n]._isBeingDestroyed ? e(r[n]) : o() && setTimeout(() => { t(e, r, n, o) }, 16); }(t, e.instances, r, o)); }), u(t); }); }; }(t, o, i, e, r))); }(p, t, () => o.current === e)).concat(o.router.resolveHooks), h, () => { if (o.pending !== e) return a(); o.pending = null, r(e), o.router.app && o.router.app.$nextTick(() => { t.forEach(t => { t(); }); }); }); }); }, mt.prototype.updateRoute = function (t) { const e = this.current; this.current = t, this.cb && this.cb(t), this.router.afterHooks.forEach(r => { r && r(t, e); }); }; const wt = (function (t) { function e(e, r) { const n = this; t.call(this, e, r); const o = e.options.scrollBehavior; const i = ot && o; i && Y(); const a = xt(this.base); window.addEventListener('popstate', t => { const r = n.current; const o = xt(n.base); n.current === l && o === a || n.transitionTo(o, t => { i && W(e, t, r, !0); }); }); } return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.go = function (t) { window.history.go(t); }, e.prototype.push = function (t, e, r) { const n = this; const o = this.current; this.transitionTo(t, t => { st(O(n.base + t.fullPath)), W(n.router, t, o, !1), e && e(t); }, r); }, e.prototype.replace = function (t, e, r) { const n = this; const o = this.current; this.transitionTo(t, t => { pt(O(n.base + t.fullPath)), W(n.router, t, o, !1), e && e(t); }, r); }, e.prototype.ensureURL = function (t) { if (xt(this.base) !== this.current.fullPath) { const e = O(this.base + this.current.fullPath); t ? st(e) : pt(e); } }, e.prototype.getCurrentLocation = function () { return xt(this.base); }, e; }(mt)); function xt(t) { let e = decodeURI(window.location.pathname); return t && e.indexOf(t) === 0 && (e = e.slice(t.length)), (e || '/') + window.location.search + window.location.hash; } const kt = (function (t) { function e(e, r, n) { t.call(this, e, r), n && (function (t) { const e = xt(t); if (!/^\/#/.test(e)) return window.location.replace(O(`${t}/#${e}`)), !0; }(this.base)) || Rt(); } return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.setupListeners = function () { const t = this; const e = this.router.options.scrollBehavior; const r = ot && e; r && Y(), window.addEventListener(ot ? 'popstate' : 'hashchange', () => { const e = t.current; Rt() && t.transitionTo(Et(), n => { r && W(t.router, n, e, !0), ot || Ct(n.fullPath); }); }); }, e.prototype.push = function (t, e, r) { const n = this; const o = this.current; this.transitionTo(t, t => { At(t.fullPath), W(n.router, t, o, !1), e && e(t); }, r); }, e.prototype.replace = function (t, e, r) { const n = this; const o = this.current; this.transitionTo(t, t => { Ct(t.fullPath), W(n.router, t, o, !1), e && e(t); }, r); }, e.prototype.go = function (t) { window.history.go(t); }, e.prototype.ensureURL = function (t) { const e = this.current.fullPath; Et() !== e && (t ? At(e) : Ct(e)); }, e.prototype.getCurrentLocation = function () { return Et(); }, e; }(mt)); function Rt() { const t = Et(); return t.charAt(0) === '/' || (Ct(`/${t}`), !1); } function Et() { let t = window.location.href; const e = t.indexOf('#'); if (e < 0) return ''; const r = (t = t.slice(e + 1)).indexOf('?'); if (r < 0) { const n = t.indexOf('#'); t = n > -1 ? decodeURI(t.slice(0, n)) + t.slice(n) : decodeURI(t); } else r > -1 && (t = decodeURI(t.slice(0, r)) + t.slice(r)); return t; } function Ot(t) { const e = window.location.href; const r = e.indexOf('#'); return `${r >= 0 ? e.slice(0, r) : e}#${t}`; } function At(t) { ot ? st(Ot(t)) : window.location.hash = t; } function Ct(t) { ot ? pt(Ot(t)) : window.location.replace(Ot(t)); } const jt = (function (t) { function e(e, r) { t.call(this, e, r), this.stack = [], this.index = -1; } return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.push = function (t, e, r) { const n = this; this.transitionTo(t, t => { n.stack = n.stack.slice(0, n.index + 1).concat(t), n.index++, e && e(t); }, r); }, e.prototype.replace = function (t, e, r) { const n = this; this.transitionTo(t, t => { n.stack = n.stack.slice(0, n.index).concat(t), e && e(t); }, r); }, e.prototype.go = function (t) { const e = this; const r = this.index + t; if (!(r < 0 || r >= this.stack.length)) { const n = this.stack[r]; this.confirmTransition(n, () => { e.index = r, e.updateRoute(n); }); } }, e.prototype.getCurrentLocation = function () { const t = this.stack[this.stack.length - 1]; return t ? t.fullPath : '/'; }, e.prototype.ensureURL = function () {}, e; }(mt)); const _t = function (t) { void 0 === t && (t = {}), this.app = null, this.apps = [], this.options = t, this.beforeHooks = [], this.resolveHooks = [], this.afterHooks = [], this.matcher = N(t.routes || [], this); let e = t.mode || 'hash'; switch (this.fallback = e === 'history' && !ot && !1 !== t.fallback, this.fallback && (e = 'hash'), R || (e = 'abstract'), this.mode = e, e) { case 'history': this.history = new wt(this, t.base); break; case 'hash': this.history = new kt(this, t.base, this.fallback); break; case 'abstract': this.history = new jt(this, t.base); } }; const Tt = { currentRoute: { configurable: !0 } }; function St(t, e) { return t.push(e), function () { const r = t.indexOf(e); r > -1 && t.splice(r, 1); }; } return _t.prototype.match = function (t, e, r) { return this.matcher.match(t, e, r); }, Tt.currentRoute.get = function () { return this.history && this.history.current; }, _t.prototype.init = function (t) { const e = this; if (this.apps.push(t), t.$once('hook:destroyed', () => { const r = e.apps.indexOf(t); r > -1 && e.apps.splice(r, 1), e.app === t && (e.app = e.apps[0] || null); }), !this.app) { this.app = t; const r = this.history; if (r instanceof wt)r.transitionTo(r.getCurrentLocation()); else if (r instanceof kt) { const n = function () { r.setupListeners(); }; r.transitionTo(r.getCurrentLocation(), n, n); }r.listen(t => { e.apps.forEach(e => { e._route = t; }); }); } }, _t.prototype.beforeEach = function (t) { return St(this.beforeHooks, t); }, _t.prototype.beforeResolve = function (t) { return St(this.resolveHooks, t); }, _t.prototype.afterEach = function (t) { return St(this.afterHooks, t); }, _t.prototype.onReady = function (t, e) { this.history.onReady(t, e); }, _t.prototype.onError = function (t) { this.history.onError(t); }, _t.prototype.push = function (t, e, r) { this.history.push(t, e, r); }, _t.prototype.replace = function (t, e, r) { this.history.replace(t, e, r); }, _t.prototype.go = function (t) { this.history.go(t); }, _t.prototype.back = function () { this.go(-1); }, _t.prototype.forward = function () { this.go(1); }, _t.prototype.getMatchedComponents = function (t) { const e = t ? t.matched ? t : this.resolve(t).route : this.currentRoute; return e ? [].concat.apply([], e.matched.map(t => Object.keys(t.components).map(e => t.components[e]))) : []; }, _t.prototype.resolve = function (t, e, r) { const n = J(t, e = e || this.history.current, r, this); const o = this.match(n, e); const i = o.redirectedFrom || o.fullPath; return { location: n, route: o, href: (function (t, e, r) { const n = r === 'hash' ? `#${e}` : e; return t ? O(`${t}/${n}`) : n; }(this.history.base, i, this.mode)), normalizedTo: n, resolved: o }; }, _t.prototype.addRoutes = function (t) { this.matcher.addRoutes(t), this.history.current !== l && this.history.transitionTo(this.history.getCurrentLocation()); }, Object.defineProperties(_t.prototype, Tt), _t.install = function t(e) { if (!t.installed || g !== e) { t.installed = !0, g = e; const n = function (t) { return void 0 !== t; }; const o = function (t, e) { let r = t.$options._parentVnode; n(r) && n(r = r.data) && n(r = r.registerRouteInstance) && r(t, e); }; e.mixin({ beforeCreate() { n(this.$options.router) ? (this._routerRoot = this, this._router = this.$options.router, this._router.init(this), e.util.defineReactive(this, '_route', this._router.history.current)) : this._routerRoot = this.$parent && this.$parent._routerRoot || this, o(this, this); }, destroyed() { o(this); } }), Object.defineProperty(e.prototype, '$router', { get() { return this._routerRoot._router; } }), Object.defineProperty(e.prototype, '$route', { get() { return this._routerRoot._route; } }), e.component('RouterView', r), e.component('RouterLink', x); const i = e.config.optionMergeStrategies; i.beforeRouteEnter = i.beforeRouteLeave = i.beforeRouteUpdate = i.created; } }, _t.version = '3.0.7', R && window.Vue && window.Vue.use(_t), _t; 
}, typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = e() : typeof define === 'function' && define.amd ? define(e) : t.VueRouter = e();